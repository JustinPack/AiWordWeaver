{"version":3,"sources":["..\\..\\electron\\main\\update.ts"],"sourcesContent":["import { app, ipcMain } from 'electron'\r\nimport {\r\n  type ProgressInfo,\r\n  type UpdateDownloadedEvent,\r\n  autoUpdater\r\n} from 'electron-updater'\r\n\r\nexport function update(win: Electron.BrowserWindow) {\r\n\r\n  // When set to false, the update download will be triggered through the API\r\n  autoUpdater.autoDownload = false\r\n  autoUpdater.disableWebInstaller = false\r\n  autoUpdater.allowDowngrade = false\r\n\r\n  // start check\r\n  autoUpdater.on('checking-for-update', function () { })\r\n  // update available\r\n  autoUpdater.on('update-available', (arg) => {\r\n    win.webContents.send('update-can-available', { update: true, version: app.getVersion(), newVersion: arg?.version })\r\n  })\r\n  // update not available\r\n  autoUpdater.on('update-not-available', (arg) => {\r\n    win.webContents.send('update-can-available', { update: false, version: app.getVersion(), newVersion: arg?.version })\r\n  })\r\n\r\n  // Checking for updates\r\n  ipcMain.handle('check-update', async () => {\r\n    if (!app.isPackaged) {\r\n      const error = new Error('The update feature is only available after the package.')\r\n      return { message: error.message, error }\r\n    }\r\n\r\n    try {\r\n      return await autoUpdater.checkForUpdatesAndNotify()\r\n    } catch (error) {\r\n      return { message: 'Network error', error }\r\n    }\r\n  })\r\n\r\n  // Start downloading and feedback on progress\r\n  ipcMain.handle('start-download', (event) => {\r\n    startDownload(\r\n      (error, progressInfo) => {\r\n        if (error) {\r\n          // feedback download error message\r\n          event.sender.send('update-error', { message: error.message, error })\r\n        } else {\r\n          // feedback update progress message\r\n          event.sender.send('download-progress', progressInfo)\r\n        }\r\n      },\r\n      () => {\r\n        // feedback update downloaded message\r\n        event.sender.send('update-downloaded')\r\n      }\r\n    )\r\n  })\r\n\r\n  // Install now\r\n  ipcMain.handle('quit-and-install', () => {\r\n    autoUpdater.quitAndInstall(false, true)\r\n  })\r\n}\r\n\r\nfunction startDownload(\r\n  callback: (error: Error | null, info: ProgressInfo) => void,\r\n  complete: (evnet: UpdateDownloadedEvent) => void,\r\n) {\r\n  autoUpdater.on('download-progress', info => callback(null, info))\r\n  autoUpdater.on('error', error => callback(error, null))\r\n  autoUpdater.on('update-downloaded', complete)\r\n  autoUpdater.downloadUpdate()\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6B;AAC7B,8BAIO;AAEA,SAAS,OAAO,KAA6B;AAGlD,sCAAY,eAAe;AAC3B,sCAAY,sBAAsB;AAClC,sCAAY,iBAAiB;AAG7B,sCAAY,GAAG,uBAAuB,WAAY;AAAA,EAAE,CAAC;AAErD,sCAAY,GAAG,oBAAoB,CAAC,QAAQ;AAC1C,QAAI,YAAY,KAAK,wBAAwB,EAAE,QAAQ,MAAM,SAAS,oBAAI,WAAW,GAAG,YAAY,2BAAK,QAAQ,CAAC;AAAA,EACpH,CAAC;AAED,sCAAY,GAAG,wBAAwB,CAAC,QAAQ;AAC9C,QAAI,YAAY,KAAK,wBAAwB,EAAE,QAAQ,OAAO,SAAS,oBAAI,WAAW,GAAG,YAAY,2BAAK,QAAQ,CAAC;AAAA,EACrH,CAAC;AAGD,0BAAQ,OAAO,gBAAgB,YAAY;AACzC,QAAI,CAAC,oBAAI,YAAY;AACnB,YAAM,QAAQ,IAAI,MAAM,yDAAyD;AACjF,aAAO,EAAE,SAAS,MAAM,SAAS,MAAM;AAAA,IACzC;AAEA,QAAI;AACF,aAAO,MAAM,oCAAY,yBAAyB;AAAA,IACpD,SAAS,OAAP;AACA,aAAO,EAAE,SAAS,iBAAiB,MAAM;AAAA,IAC3C;AAAA,EACF,CAAC;AAGD,0BAAQ,OAAO,kBAAkB,CAAC,UAAU;AAC1C;AAAA,MACE,CAAC,OAAO,iBAAiB;AACvB,YAAI,OAAO;AAET,gBAAM,OAAO,KAAK,gBAAgB,EAAE,SAAS,MAAM,SAAS,MAAM,CAAC;AAAA,QACrE,OAAO;AAEL,gBAAM,OAAO,KAAK,qBAAqB,YAAY;AAAA,QACrD;AAAA,MACF;AAAA,MACA,MAAM;AAEJ,cAAM,OAAO,KAAK,mBAAmB;AAAA,MACvC;AAAA,IACF;AAAA,EACF,CAAC;AAGD,0BAAQ,OAAO,oBAAoB,MAAM;AACvC,wCAAY,eAAe,OAAO,IAAI;AAAA,EACxC,CAAC;AACH;AAEA,SAAS,cACP,UACA,UACA;AACA,sCAAY,GAAG,qBAAqB,UAAQ,SAAS,MAAM,IAAI,CAAC;AAChE,sCAAY,GAAG,SAAS,WAAS,SAAS,OAAO,IAAI,CAAC;AACtD,sCAAY,GAAG,qBAAqB,QAAQ;AAC5C,sCAAY,eAAe;AAC7B;","names":[],"file":"update.js"}